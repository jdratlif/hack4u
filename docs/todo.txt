--------------------------------------------------------------------------------
| hack4u TODO List
--------------------------------------------------------------------------------

hack4u implements the set of features I set out to create with this program. It
is effective version 1.0, but to remain consistent with the versioning scheme
I've chosen, it is 0.90. 0.90 means a not well tested 1.0. I'm 99% positive it
works the way it looks and should react the way you expect. But of course in
a project like this, there could possibly be some bugs to fix. If none are found
in a set period of time (I'm thinking 6 months), then the program will become
1.0.

Nevertheless, there are some things I've thought about implementing that may or
may not have been on my original list that I decided weren't that important for
one reason or another. I may or may not implement these or other things in the
program, but here is a list of things I'd like to see happen.

- write document describing the sram file and its (known) meanings
- add internal help

  The list is in order of decreasing importantance (to me at least). As you can
  see, documentation is at the top of my list, though I think the program is
  fairly intuitive in and of itself.

- edit the characters waiting in the hostel

  I originally meant for the program to allow you to edit the characters who had
  joined your party (as opposed to the ones just in your party), but I forgot to
  search for the address where this is stored. Since I'd already designed the
  GUI framework by the time I remembered this, it seemed a waste of time.

- tooltips & status bar

  Tooltips and a status bar would be nice, but are hardly necessary.

- separate MainFrame into view/controller pieces

  The MainFrame class and it's implementation file MainFrame.cc is horribly
  overloaded. More than 40 KB and there is no distinction between controller and
  view even though the class is designated part of the view. I wasn't sure if
  this was possible originally, but I know now it was.

- comment the code according to doxygen standards (or maybe just at all :-)

  The code should definitely be commented, but I've yet to learn any of the C++
  documentation standards. I love javadoc though and would never leave out
  comments in a Java program the way I did here. If you're trying to read the
  code, Sorry.

- toolbar

  A toolbar, like a status bar would be nice, but it's functional overkill.

- add installer program for Windows

  An installer program would be nice for Windows especially, but it's almost
  surely overkill.

- change C-style casts to C++ casts

  For some reason, Bjarne Stroustrup doesn't like C-style casts in C++. I've
  read about this on the net, but I don't have his book. I'd like to know the
  motivation for it, and if I think it's persuasive, I'll change the code.

